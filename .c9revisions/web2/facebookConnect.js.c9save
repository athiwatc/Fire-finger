{"ts":1352820964600,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1352825770878,"patch":[[{"diffs":[[1,"  var accessToken;\n  var userID;\n\n  // Additional JS functions here\n  window.fbAsyncInit = function() {\n    FB.init({\n      appId      : '296376977130858', // App ID\n      status     : true, // check login status\n      cookie     : true, // enable cookies to allow the server to access the session\n      xfbml      : true  // parse XFBML\n    });\n\n    // Additional init code here\n    FB.getLoginStatus(function(response) {\n      console.log(response);\n      \n    if (response.status === 'connected') {\n      // connected\n      console.log('Logined');\n      //logout();\n      accessToken = response.authResponse.accessToken;\n      userID = response.authResponse.userID;\n      friendListAPI();\n    } else if (response.status === 'not_authorized') {\n      // not_authorized\n      console.log('Not Autorized');\n      login();\n    } else {\n      // not_logged_in\n      console.log('Not Login');\n      login();\n    }\n   });\n  };\n\n  // Load the SDK Asynchronously\n  (function(d){\n     var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];\n     if (d.getElementById(id)) {return;}\n     js = d.createElement('script'); js.id = id; js.async = true;\n     js.src = \"//connect.facebook.net/en_US/all.js\";\n     ref.parentNode.insertBefore(js, ref);\n   }(document));\n\n  function login() {\n    FB.login(function(response) {\n        if (response.authResponse) {\n            // connected\n        } else {\n            // cancelled\n        }\n    });\n  }\n\n  function friendListAPI() {\n    console.log('Welcome!  Fetching your information.... ');\n    var url = '/me/friends?access_token=' + accessToken;\n    FB.api(url, function(response) {\n        console.log(response);\n        for (var i = 0; i < response.data.length; i++) {\n          var friend = response.data[i];\n          var x = document.getElementById(\"FBfriendlist\");\n          var url = \"https://graph.facebook.com/\"+friend.id+\"/picture\";\n          var fun = 'postToFeed('+friend.id+')';\n          var request = 'sendRequestTo('+friend.id+')';\n          var z = '<tr><td><img src=\"'+url+'\"></td><td>'+friend.name+'</td><td><button onclick=\"'+fun+'\">Post it!</button></td><td><button onclick=\"'+request+'\">Send it!</button></td></tr>';\n          x.innerHTML += z;\n        };\n        //console.log('Good to see you, ' + response.name + '.');\n    });\n  }\n\n  function logout() {\n    FB.logout(function(response) {\n      // user is now logged out\n    });\n  }\n\n  function postToFeed() {\n\n        // calling the API ...\n        var obj = {\n          method: 'feed',\n          link: 'https://developers.facebook.com/docs/reference/dialogs/',\n          picture: 'http://fbrell.com/f8.jpg',\n          name: 'Facebook Dialogs',\n          caption: 'Reference Documentation',\n          description: 'Using Dialogs to interact with users.'\n        };\n\n        function callback(response) {\n          //alert(\"Post ID: \" + response['post_id']);\n        }\n\n        FB.ui(obj, callback);\n  }\n\n  function postToFeed(sendto) {\n\n        // calling the API ...\n        var obj = {\n          method: 'feed',\n          link: 'https://developers.facebook.com/docs/reference/dialogs/',\n          picture: 'http://fbrell.com/f8.jpg',\n          name: 'Facebook Dialogs',\n          to: sendto,\n          caption: 'Reference Documentation',\n          description: 'Using Dialogs to interact with users.'\n        };\n\n        function callback(response) {\n          //alert(\"Post ID: \" + response['post_id']);\n        }\n\n        FB.ui(obj, callback);\n  }\n\n      function sendRequestTo(id) {\n        FB.ui({method: 'apprequests',\n          message: 'Fire Finger invite Request',\n          to: id\n        }, requestCallback);\n      }\n\n      function sendRequestViaMultiFriendSelector() {\n        FB.ui({method: 'apprequests',\n          message: 'Fire Finger invite Request'\n        }, requestCallback);\n      }\n      \n      function requestCallback(response) {\n        // Handle callback here\n      }"]],"start1":0,"start2":0,"length1":0,"length2":3927}]],"length":3927,"saved":false}
{"contributors":["wairung3421@gmail.com"],"silentsave":false,"ts":1352863863223,"patch":[[{"diffs":[[0,"tToFeed("],[1,"score"],[0,") {\n\n   "]],"start1":2429,"start2":2429,"length1":16,"length2":21},{"diffs":[[0,"    name: 'F"],[-1,"acebook Dialogs"],[1,"ire Finger Score"],[0,"',\n         "]],"start1":2652,"start2":2652,"length1":39,"length2":40},{"diffs":[[0,"ption: '"],[-1,"Reference Documentation"],[1,"Your score of Fire Finger"],[0,"',\n     "]],"start1":2695,"start2":2695,"length1":39,"length2":41},{"diffs":[[0,"n: '"],[-1,"Using Dialogs to interact with users."],[1,"You got ' + score + 'points"],[0,"'\n  "]],"start1":2751,"start2":2751,"length1":45,"length2":35}]],"length":3925,"saved":false}
{"ts":1352863872262,"patch":[[{"diffs":[[0," 'points"],[1,"."],[0,"'\n      "]],"start1":2774,"start2":2774,"length1":16,"length2":17}]],"length":3926,"saved":false}
